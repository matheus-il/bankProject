{"version":3,"sources":["./src/app/services/transfer.service.ts","./src/environments/environment.ts","./src/app/extract/extract.component.ts","./src/app/extract/extract.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/app/new-transfer/new-transfer.component.ts","./src/app/new-transfer/new-transfer.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Transfer } from '../models/transfer.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TransferService {\n  private transferList: any[];\n  private url = 'http://localhost:3000/transfers/';\n\n  constructor(private httpClient: HttpClient) {\n    this.transferList = [];\n  }\n\n  get transfers() {\n    return this.transferList;\n  }\n\n  addTransfer(transfer: Transfer) {\n    this.addDate(transfer);\n\n    return this.httpClient.post<Transfer>(this.url, transfer);\n  }\n\n  allTransfers() {\n    return this.httpClient.get<Transfer[]>(this.url);\n  }\n\n  private addDate(transfer: Transfer) {\n    transfer.date = new Date();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, Input, OnInit } from '@angular/core';\nimport { TransferService } from '../services/transfer.service';\n\n@Component({\n  selector: 'app-extract',\n  templateUrl: './extract.component.html',\n  styleUrls: ['./extract.component.scss'],\n})\nexport class ExtractComponent implements OnInit {\n  @Input() transfers: any[];\n\n  constructor(private service: TransferService) {}\n\n  ngOnInit(): void {\n    this.service.allTransfers().subscribe((allTransfers) => (this.transfers = allTransfers));\n  }\n}\n","<section class=\"container\">\n  <h2 class=\"titulo\">Transferências</h2>\n  <table class=\"tabela\">\n    <thead class=\"tabela__cabecalho\">\n      <th class=\"tabela__cabecalho__conteudo\">Data</th>\n      <th class=\"tabela__cabecalho__conteudo\">Valor</th>\n      <th class=\"tabela__cabecalho__conteudo\">Destino</th>\n    </thead>\n    <tbody *ngIf=\"!!transfers; else emptyList\">\n      <tr class=\"tabela__linha\" *ngFor=\"let transfer of transfers\">\n        <td class=\"tabela__conteudo\">\n          {{ transfer.date | date: \"short\" }}\n        </td>\n        <td class=\"tabela__conteudo\">{{ transfer.value | currency }}</td>\n        <td class=\"tabela__conteudo\">{{ transfer.account }}</td>\n      </tr>\n    </tbody>\n  </table>\n  <ng-template #emptyList>\n    <p>Nenhuma transferência cadastrada</p>\n  </ng-template>\n</section>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = 'bankProject';\n  transfers: any[] = [];\n\n  constructor() {}\n\n}\n","<header>\n  <a routerLink=\"extract\">BankProject</a>\n  <a routerLink=\"new-transfer\" routerLinkActive=\"ativo\">Nova transferência</a>\n</header>\n<main>\n  <router-outlet></router-outlet>\n</main>\n","import { ExtractComponent } from './extract/extract.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { DEFAULT_CURRENCY_CODE, LOCALE_ID, NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { FormsModule } from '@angular/forms';\nimport localePt from '@angular/common/locales/pt';\nimport { registerLocaleData } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { NewTransferComponent } from './new-transfer/new-transfer.component';\n\nregisterLocaleData(localePt, 'pt');\n\n@NgModule({\n  declarations: [AppComponent, NewTransferComponent, ExtractComponent],\n  imports: [BrowserModule, FormsModule, HttpClientModule, AppRoutingModule],\n  providers: [\n    { provide: LOCALE_ID, useValue: 'pt' },\n    {\n      provide: DEFAULT_CURRENCY_CODE,\n      useValue: 'BRL',\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ExtractComponent } from './extract/extract.component';\nimport { NewTransferComponent } from './new-transfer/new-transfer.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'extract', pathMatch: 'full' },\n  { path: 'extract', component: ExtractComponent },\n  { path: 'new-transfer', component: NewTransferComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, EventEmitter, Output } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { TransferService } from '../services/transfer.service';\r\n\r\n@Component({\r\n  selector: 'app-new-transfer',\r\n  templateUrl: './new-transfer.component.html',\r\n  styleUrls: ['./new-transfer.component.scss'],\r\n})\r\nexport class NewTransferComponent {\r\n  @Output() onTransfer = new EventEmitter<any>();\r\n\r\n  value: number;\r\n  account: number;\r\n\r\n  constructor(private service: TransferService, private router: Router) {}\r\n\r\n  transfer() {\r\n    console.log('Solicitada nova transferência');\r\n    const valueToTransfer = { value: this.value, account: this.account };\r\n\r\n    this.service.addTransfer(valueToTransfer).subscribe(\r\n      (result) => {\r\n        this.cleanValueAndAccount();\r\n        this.router.navigateByUrl('extract');\r\n      },\r\n      (error) => console.error(error)\r\n    );\r\n  }\r\n\r\n  cleanValueAndAccount() {\r\n    this.value = 0;\r\n    this.account = 0;\r\n  }\r\n}\r\n","<section class=\"container\">\n  <form class=\"formulario\" (ngSubmit)=\"transfer()\">\n    <h2 class=\"formulario__titulo\">Nova Transferência</h2>\n\n    <div class=\"form-field\">\n      <label class=\"form-field__label\" for=\"value\">Valor</label>\n      <input class=\"form-field__input\" id=\"value\" type=\"number\" [(ngModel)]=\"value\" name=\"value\"/>\n    </div>\n\n    <div class=\"form-field\">\n      <label class=\"form-field__label\" for=\"account\">Destino</label>\n      <input class=\"form-field__input\" id=\"account\" type=\"text\" [(ngModel)]=\"account\" name=\"account\" />\n    </div>\n\n    <div class=\"botao-wrapper\">\n      <button class=\"botao\" type=\"submit\">Transferir</button>\n    </div>\n  </form>\n</section>\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}